services:
  backend-stocks:
    build: 
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: backend-stocks-prod
    ports:
      - "3012:3012"
    environment:
      - NODE_ENV=production
      - PORT=3012
    env_file:
      - .env
    volumes:
      - logs-data:/app/logs:rw
      - mainlog-data:/app/mainlog:rw
      - temp-logs-data:/app/temp-logs:rw
    restart: unless-stopped
    networks:
      - stocks-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3012/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp:noexec,nosuid,size=100m

volumes:
  logs-data:
  mainlog-data:
  temp-logs-data:

networks:
  stocks-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16